---
# tasks file for deploy_users
- name: Set includedir in sudoers
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    regexp: "^.?includedir (.*)$"
    line: "#includedir /etc/sudoers.d"
    state: present
    backrefs: true
    validate: "visudo -cf %s"

- name: Passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL:ALL) NOPASSWD: ALL"
    validate: "visudo -cf %s"
  when: passwordless_sudo | bool

- name: No passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regexp: "^%sudo"
    line: "%sudo ALL=(ALL:ALL) ALL"
    validate: "visudo -cf %s"
  when: not (passwordless_sudo | bool)

- name: Create necessary groups
  ansible.builtin.group:
    name: "{{ item }}"
    state: "present"
  with_items:
    - "{{ user_groups }}"
    - "{{ additional_user_groups }}"

- name: Deploy users
  ansible.builtin.include_tasks: create-user.yml
  with_items: "{{ (users + additional_users) | unique }}"
  loop_control:
    label: "{{ item.name }}"

- name: Determine existing users
  ansible.builtin.shell: "awk -F: '($3>=1000)&&($3<60000)&&($1!='nobody'){print $1}' /etc/passwd"
  changed_when: false
  register: existing_users

- name: Create sublist of usernames from vars
  ansible.builtin.set_fact:
    new_users: []

- name: Create sublist of usernames from vars, add usernames
  ansible.builtin.set_fact:
    new_users: "{{ new_users + [item.name] }}"
  with_items: "{{ (users + additional_users) | unique }}"
  loop_control:
    label: "{{ item.name }}"

- name: Determine users to be removed
  ansible.builtin.set_fact:
    users_to_remove: "{{ existing_users.stdout_lines | difference(new_users) }}"

- name: Ensure that ansible_ssh_user is not removed
  ansible.builtin.set_fact:
    users_to_remove: "{{ users_to_remove | difference(ansible_ssh_user) }}"
  when: ansible_ssh_user is defined

- name: Ensure that ansible_user is not removed
  ansible.builtin.set_fact:
    users_to_remove: "{{ users_to_remove | difference(ansible_user_id) }}"

- name: Remove users
  ansible.builtin.include_tasks: remove-user.yml
  with_items: "{{ users_to_remove }}"
